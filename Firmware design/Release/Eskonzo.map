Archive member included because of file (symbol)

e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
                              e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm8.o (exit)
e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
                              ./usbdrv/usbdrv.o (__do_copy_data)
e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
                              ./usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ./usbdrv/usbdrv.o
usbTxStatus1        0xc               ./usbdrv/usbdrv.o
usbDeviceAddr       0x1               ./usbdrv/usbdrv.o
usbRxToken          0x1               ./usbdrv/usbdrv.o
usbInputBufOffset   0x1               ./usbdrv/usbdrv.o
usbMsgPtr           0x2               ./usbdrv/usbdrv.o
usbRxLen            0x1               ./usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv/usbdrv.o
usbCurrentTok       0x1               ./usbdrv/usbdrv.o
usbConfiguration    0x1               ./usbdrv/usbdrv.o
usbRxBuf            0x16              ./usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm8.o
LOAD ./usbdrv/oddebug.o
LOAD ./usbdrv/usbdrv.o
LOAD ./usbdrv/usbdrvasm.o
LOAD ./main.o
START GROUP
LOAD e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a
LOAD e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4\libm.a
LOAD e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4\libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x79c
 *(.vectors)
 .vectors       0x00000000       0x26 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.progmem*)
 .progmem.data.usbDescriptorConfiguration
                0x00000026       0x22 ./usbdrv/usbdrv.o
                0x00000026                usbDescriptorConfiguration
 .progmem.data.usbDescriptorDevice
                0x00000048       0x12 ./usbdrv/usbdrv.o
                0x00000048                usbDescriptorDevice
 .progmem.data.usbDescriptorStringDevice
                0x0000005a        0xc ./usbdrv/usbdrv.o
                0x0000005a                usbDescriptorStringDevice
 .progmem.data.usbDescriptorStringVendor
                0x00000066       0x20 ./usbdrv/usbdrv.o
                0x00000066                usbDescriptorStringVendor
 .progmem.data.usbDescriptorString0
                0x00000086        0x4 ./usbdrv/usbdrv.o
                0x00000086                usbDescriptorString0
 .progmem.data.usbDescriptorHidReport
                0x0000008a       0x34 ./main.o
                0x0000008a                usbDescriptorHidReport
                0x000000be                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000be                __ctors_start = .
 *(.ctors)
                0x000000be                __ctors_end = .
                0x000000be                __dtors_start = .
 *(.dtors)
                0x000000be                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000be        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm8.o
                0x000000be                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000be        0xc e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000ca       0x16 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
                0x000000ca                __do_copy_data
 .init4         0x000000e0       0x10 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
                0x000000e0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000f0        0x4 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000f4        0x2 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm8.o
                0x000000f4                __vector_12
                0x000000f4                __bad_interrupt
                0x000000f4                __vector_6
                0x000000f4                __vector_3
                0x000000f4                __vector_11
                0x000000f4                __vector_13
                0x000000f4                __vector_17
                0x000000f4                __vector_7
                0x000000f4                __vector_5
                0x000000f4                __vector_4
                0x000000f4                __vector_9
                0x000000f4                __vector_2
                0x000000f4                __vector_15
                0x000000f4                __vector_8
                0x000000f4                __vector_14
                0x000000f4                __vector_10
                0x000000f4                __vector_16
                0x000000f4                __vector_18
 .text          0x000000f6        0x0 ./usbdrv/oddebug.o
 .text          0x000000f6        0x0 ./usbdrv/usbdrv.o
 .text          0x000000f6      0x274 ./usbdrv/usbdrvasm.o
                0x000000f6                usbCrc16
                0x00000120                usbCrc16Append
                0x00000128                __vector_1
 .text          0x0000036a        0x0 ./main.o
 .text          0x0000036a        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text          0x0000036a        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text          0x0000036a        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
                0x0000036a                . = ALIGN (0x2)
 *(.text.*)
 .text.usbSetInterrupt
                0x0000036a       0x44 ./usbdrv/usbdrv.o
                0x0000036a                usbSetInterrupt
 .text.usbPoll  0x000003ae      0x20c ./usbdrv/usbdrv.o
                0x000003ae                usbPoll
 .text.usbInit  0x000005ba       0x1a ./usbdrv/usbdrv.o
                0x000005ba                usbInit
 .text.usbFunctionSetup
                0x000005d4       0x42 ./main.o
                0x000005d4                usbFunctionSetup
 .text.startup.main
                0x00000616      0x182 ./main.o
                0x00000616                main
 .text.libgcc.mul
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
                0x00000798                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000798        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
                0x00000798                _exit
                0x00000798                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000798        0x4 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x0000079c                _etext = .

.data           0x00800060        0x2 load address 0x0000079c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./usbdrv/oddebug.o
 .data          0x00800060        0x0 ./usbdrv/usbdrv.o
 .data          0x00800060        0x0 ./usbdrv/usbdrvasm.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.usbMsgLen
                0x00800060        0x1 ./usbdrv/usbdrv.o
 .data.usbTxLen
                0x00800061        0x1 ./usbdrv/usbdrv.o
                0x00800061                usbTxLen
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800062                . = ALIGN (0x2)
                0x00800062                _edata = .
                0x00800062                PROVIDE (__data_end, .)

.bss            0x00800062       0x3c
                0x00800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800062        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800062        0x0 ./usbdrv/oddebug.o
 .bss           0x00800062        0x0 ./usbdrv/usbdrv.o
 .bss           0x00800062        0x0 ./usbdrv/usbdrvasm.o
 .bss           0x00800062        0x0 ./main.o
 .bss           0x00800062        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .bss           0x00800062        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800062        0x0 e:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.usbMsgFlags
                0x00800062        0x1 ./usbdrv/usbdrv.o
 .bss.idleRate  0x00800063        0x1 ./main.o
 .bss.Eskonzo   0x00800064        0x4 ./main.o
 *(COMMON)
 COMMON         0x00800068       0x36 ./usbdrv/usbdrv.o
                0x00800068                usbTxBuf
                0x00800073                usbTxStatus1
                0x0080007f                usbDeviceAddr
                0x00800080                usbRxToken
                0x00800081                usbInputBufOffset
                0x00800082                usbMsgPtr
                0x00800084                usbRxLen
                0x00800085                usbNewDeviceAddr
                0x00800086                usbCurrentTok
                0x00800087                usbConfiguration
                0x00800088                usbRxBuf
                0x0080009e                PROVIDE (__bss_end, .)
                0x0000079c                __data_load_start = LOADADDR (.data)
                0x0000079e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080009e        0x0
                0x0080009e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080009e                PROVIDE (__noinit_end, .)
                0x0080009e                _end = .
                0x0080009e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 ./usbdrv/oddebug.o
                                 0x31 (size before relaxing)
 .comment       0x00000000       0x31 ./usbdrv/usbdrv.o
 .comment       0x00000000       0x31 ./main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Eskonzo.elf elf32-avr)
LOAD linker stubs
